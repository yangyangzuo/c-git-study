8>>>>>>删除git仓库中的文件
		//删除文件
		1.在硬盘中删除文件 
		//把这个删除操作添加到暂存区)
		2.git add .		
		//提交的本地代码库
		3.git commit . -m "本次删除描述"

		或者

		//这里的git rm 等价于上面的1和2
		//这一步执行时会删除硬盘上的该文件，并且把这个删除操作添加到暂存区
		1.git rm 文件名
		//提交的本地代码库
		2.git commit . -m "本次删除描述"
		


		另一种情况:
			我们想把文件从 Git 仓库中删除（即:从暂存区域移除），但仍然希望保留在当前工作目录中。 
			换句话说，你想让文件保留在磁盘，但是并不想让 Git 继续跟踪。 
			当你忘记添加 .gitignore 文件，不小心把一个很大的日志文件或一堆 .a 这样的编译生成文件添加到暂存区时，这一做法尤其有用。 
			或者说
			你通过npm i安装了很多包，不小心git add . 则此时node_modules被添加到了暂存区，此时，node_module在磁盘中需要使用，但是并不需要被追踪(不需要提交)

			为达到这一目的，使用 --cached 选项：
			$ git rm --cached README
			git rm 命令后面可以列出文件或者目录的名字，也可以使用 glob 模式。 这里命令执行后,暂存区里面就不会有 README这个文件，即:README又变成了untracked files

			删除不小心添加到暂存区中的不需要追踪的文件
			$ git rm --cached node_modules -r



			暂存区文件的删除:
			创建一个新文件，然后git add .
			此时文件被放入暂存区,这个时候，暂存区的文件就准备好提交到本地库了
			如果，不想提交这个文件，即:要把文件从暂存区移除
			git rm --cached 文件名
			此时，文件从暂存区移除了，执行git status,查看，会提示untracked file,文件未追踪
			注意:这个是新创建的文件，而不是以前提交过的文件(被追踪过的文件)

			
			
			
			使用blog模式举例:
			$ git rm log/\*.log
			注意到星号 * 之前的反斜杠 \， 因为 Git 有它自己的文件模式扩展匹配方式，所以我们不用 shell 来帮忙展开。 此命令删除 log/ 目录下扩展名为 .log 的所有文件。 类似的比如：

			$ git rm \*~
			该命令为删除以 ~ 结尾的所有文件。

			删除特殊字符的文件:
			通过转义字符\
			例如:删除test().txt文件
			git rm test\(\).txt
			或者
			git rm test然后tab建，让他自动补全
			或者
			在本地把文件修改为普通字符文件，然后提交后，再删除，再次提交 
			

>>>>>>>>>>>文件的移动
	git mv 文件 新文件名
	执行完后，提交即可

	或者
	直接在工作区修改文件名
	然后add和commit即可

	其实，运行 git mv 就相当于运行了下面三条命令：
	$ mv README.md README
	$ git rm README.md
	$ git add README



