		
		
		
6>>>>命令回顾
		1.git init,初始化目录，然后创建代码文件
		2.git add . 把当前目录下的文件放入到暂存区(把文件置于git的追踪(track)之下，以后每次文件改动都会被git记录)
		3.git commit -m "提交说明"
		
		合并操作:
		把2,3合并
		git commit -a -m "提交说明"
		git commit --all -m "提交说明"
		
		4.此时修改文件
		以前的操作:
		git add .
		git commit -m "提交说明"
		使用合并操作的命令:
		git commit -a -m "提交说明"
		
		
		
		
		
		使用注意:
		例如:
		1.新建文件
		echo "11">1.txt
		查看文件
		cat 1.txt
		2.把文件添加到暂存区
		git add .
		3.把暂存区的文件提交到代码库
		git commit -m "提交说明"
		4.修改文件1.txt
		echo "22">>1.txt
		cat 1.txt
		5.再新建一个文件
		echo "aaaa">2.txt
		6.git status
		
		注意:::::
		此时我们想使用
		git commit -a -m "提交说明"
		把修改的 1.txt和新建的2.txt文件提交到代码库
		此时操作会出现问题?
		
		
		根据结果可以看到新添加的文件是没有被添加到代码库的，这个心添加的文件是处于未被追踪的状态，即:untracked
		这个文件还处于我们的最初的文件创建目录区域，即：这个文件压根就没有进入暂存区,所以提交的时候不会对这个文件操作
		
		
		
		git commit -a -m "提交说明" 
		使用注意:
		这个命令不会对未被tracked的文件处理,即:这个命令只会对纳入git监视的文件才会提交
		
		
